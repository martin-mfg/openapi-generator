<?php

/**
 * dummy
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * dummy
 * The version of the OpenAPI document: dummy
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */
namespace OpenAPIServer\Model;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Model\ExampleResponse;

/**
 * ExampleResponseTest Class Doc Comment
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Model\ExampleResponse
 */
class ExampleResponseTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ExampleResponse"
     */
    public function testExampleResponse()
    {
        $testExampleResponse = new ExampleResponse();
        $namespacedClassname = ExampleResponse::getModelsNamespace() . '\\ExampleResponse';
        $this->assertSame('\\' . ExampleResponse::class, $namespacedClassname);
        $this->assertTrue(
            class_exists($namespacedClassname),
            sprintf('Assertion failed that "%s" class exists', $namespacedClassname)
        );
        $this->markTestIncomplete(
            'Test of "ExampleResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "emptyString"
     */
    public function testPropertyEmptyString()
    {
        $this->markTestIncomplete(
            'Test of "emptyString" property in "ExampleResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "numberString"
     */
    public function testPropertyNumberString()
    {
        $this->markTestIncomplete(
            'Test of "numberString" property in "ExampleResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "boolString"
     */
    public function testPropertyBoolString()
    {
        $this->markTestIncomplete(
            'Test of "boolString" property in "ExampleResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "nullString"
     */
    public function testPropertyNullString()
    {
        $this->markTestIncomplete(
            'Test of "nullString" property in "ExampleResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "aBool"
     */
    public function testPropertyABool()
    {
        $this->markTestIncomplete(
            'Test of "aBool" property in "ExampleResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "zero"
     */
    public function testPropertyZero()
    {
        $this->markTestIncomplete(
            'Test of "zero" property in "ExampleResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test getOpenApiSchema static method
     * @covers ::getOpenApiSchema
     */
    public function testGetOpenApiSchema()
    {
        $schemaArr = ExampleResponse::getOpenApiSchema();
        $this->assertIsArray($schemaArr);
    }
}
