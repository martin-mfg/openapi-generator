/**
* dummy
* dummy
*
* The version of the OpenAPI document: dummy
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ExampleResponse.h
 *
 * dummy
 */

#ifndef ExampleResponse_H_
#define ExampleResponse_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// dummy
/// </summary>
class  ExampleResponse
{
public:
    ExampleResponse();
    virtual ~ExampleResponse() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const ExampleResponse& rhs) const;
    bool operator!=(const ExampleResponse& rhs) const;

    /////////////////////////////////////////////
    /// ExampleResponse members

    /// <summary>
    /// 
    /// </summary>
    std::string getEmptyString() const;
    void setEmptyString(std::string const& value);
    bool emptyStringIsSet() const;
    void unsetEmptyString();
    /// <summary>
    /// 
    /// </summary>
    std::string getNumberString() const;
    void setNumberString(std::string const& value);
    bool numberStringIsSet() const;
    void unsetNumberString();
    /// <summary>
    /// 
    /// </summary>
    std::string getBoolString() const;
    void setBoolString(std::string const& value);
    bool boolStringIsSet() const;
    void unsetBoolString();
    /// <summary>
    /// 
    /// </summary>
    std::string getNullString() const;
    void setNullString(std::string const& value);
    bool nullStringIsSet() const;
    void unsetNullString();
    /// <summary>
    /// 
    /// </summary>
    bool isABool() const;
    void setABool(bool const value);
    bool aBoolIsSet() const;
    void unsetABool();
    /// <summary>
    /// 
    /// </summary>
    int32_t getZero() const;
    void setZero(int32_t const value);
    bool zeroIsSet() const;
    void unsetZero();

    friend  void to_json(nlohmann::json& j, const ExampleResponse& o);
    friend  void from_json(const nlohmann::json& j, ExampleResponse& o);
protected:
    std::string m_EmptyString;
    bool m_EmptyStringIsSet;
    std::string m_NumberString;
    bool m_NumberStringIsSet;
    std::string m_BoolString;
    bool m_BoolStringIsSet;
    std::string m_NullString;
    bool m_NullStringIsSet;
    bool m_ABool;
    bool m_ABoolIsSet;
    int32_t m_Zero;
    bool m_ZeroIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* ExampleResponse_H_ */
