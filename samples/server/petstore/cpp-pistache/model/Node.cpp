/**
* dummy
* dummy
*
* The version of the OpenAPI document: dummy
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Node.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

Node::Node()
{
    m_LeftIsSet = false;
    m_RightIsSet = false;
    
}

void Node::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool Node::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool Node::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "Node" : pathPrefix;

            
    return success;
}

bool Node::operator==(const Node& rhs) const
{
    return
    
    
    
    ((!leftIsSet() && !rhs.leftIsSet()) || (leftIsSet() && rhs.leftIsSet() && getLeft() == rhs.getLeft())) &&
    
    
    ((!rightIsSet() && !rhs.rightIsSet()) || (rightIsSet() && rhs.rightIsSet() && getRight() == rhs.getRight()))
    
    ;
}

bool Node::operator!=(const Node& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const Node& o)
{
    j = nlohmann::json::object();
    if(o.leftIsSet())
        j["left"] = o.m_Left;
    if(o.rightIsSet())
        j["right"] = o.m_Right;
    
}

void from_json(const nlohmann::json& j, Node& o)
{
    if(j.find("left") != j.end())
    {
        j.at("left").get_to(o.m_Left);
        o.m_LeftIsSet = true;
    } 
    if(j.find("right") != j.end())
    {
        j.at("right").get_to(o.m_Right);
        o.m_RightIsSet = true;
    } 
    
}

org::openapitools::server::model::Node Node::getLeft() const
{
    return m_Left;
}
void Node::setLeft(org::openapitools::server::model::Node const& value)
{
    m_Left = value;
    m_LeftIsSet = true;
}
bool Node::leftIsSet() const
{
    return m_LeftIsSet;
}
void Node::unsetLeft()
{
    m_LeftIsSet = false;
}
org::openapitools::server::model::Node Node::getRight() const
{
    return m_Right;
}
void Node::setRight(org::openapitools::server::model::Node const& value)
{
    m_Right = value;
    m_RightIsSet = true;
}
bool Node::rightIsSet() const
{
    return m_RightIsSet;
}
void Node::unsetRight()
{
    m_RightIsSet = false;
}


} // namespace org::openapitools::server::model

