/**
 * dummy
 * dummy
 *
 * The version of the OpenAPI document: dummy
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDummy_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDummy_200_response::OAIDummy_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDummy_200_response::OAIDummy_200_response() {
    this->initializeModel();
}

OAIDummy_200_response::~OAIDummy_200_response() {}

void OAIDummy_200_response::initializeModel() {

    m_outer_prop_isSet = false;
    m_outer_prop_isValid = false;
}

void OAIDummy_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDummy_200_response::fromJsonObject(QJsonObject json) {

    m_outer_prop_isValid = ::OpenAPI::fromJsonValue(outer_prop, json[QString("outerProp")]);
    m_outer_prop_isSet = !json[QString("outerProp")].isNull() && m_outer_prop_isValid;
}

QString OAIDummy_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDummy_200_response::asJsonObject() const {
    QJsonObject obj;
    if (outer_prop.isSet()) {
        obj.insert(QString("outerProp"), ::OpenAPI::toJsonValue(outer_prop));
    }
    return obj;
}

OAIDummy_200_response_outerProp OAIDummy_200_response::getOuterProp() const {
    return outer_prop;
}
void OAIDummy_200_response::setOuterProp(const OAIDummy_200_response_outerProp &outer_prop) {
    this->outer_prop = outer_prop;
    this->m_outer_prop_isSet = true;
}

bool OAIDummy_200_response::is_outer_prop_Set() const{
    return m_outer_prop_isSet;
}

bool OAIDummy_200_response::is_outer_prop_Valid() const{
    return m_outer_prop_isValid;
}

bool OAIDummy_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (outer_prop.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDummy_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
