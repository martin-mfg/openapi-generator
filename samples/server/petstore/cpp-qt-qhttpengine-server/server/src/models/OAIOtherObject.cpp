/**
 * dummy
 * dummy
 *
 * The version of the OpenAPI document: dummy
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOtherObject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOtherObject::OAIOtherObject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOtherObject::OAIOtherObject() {
    this->initializeModel();
}

OAIOtherObject::~OAIOtherObject() {}

void OAIOtherObject::initializeModel() {

    m_my_only_property2_isSet = false;
    m_my_only_property2_isValid = false;
}

void OAIOtherObject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOtherObject::fromJsonObject(QJsonObject json) {

    m_my_only_property2_isValid = ::OpenAPI::fromJsonValue(my_only_property2, json[QString("myOnlyProperty2")]);
    m_my_only_property2_isSet = !json[QString("myOnlyProperty2")].isNull() && m_my_only_property2_isValid;
}

QString OAIOtherObject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOtherObject::asJsonObject() const {
    QJsonObject obj;
    if (my_only_property2.isSet()) {
        obj.insert(QString("myOnlyProperty2"), ::OpenAPI::toJsonValue(my_only_property2));
    }
    return obj;
}

OAIExampleResponse OAIOtherObject::getMyOnlyProperty2() const {
    return my_only_property2;
}
void OAIOtherObject::setMyOnlyProperty2(const OAIExampleResponse &my_only_property2) {
    this->my_only_property2 = my_only_property2;
    this->m_my_only_property2_isSet = true;
}

bool OAIOtherObject::is_my_only_property2_Set() const{
    return m_my_only_property2_isSet;
}

bool OAIOtherObject::is_my_only_property2_Valid() const{
    return m_my_only_property2_isValid;
}

bool OAIOtherObject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (my_only_property2.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOtherObject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
