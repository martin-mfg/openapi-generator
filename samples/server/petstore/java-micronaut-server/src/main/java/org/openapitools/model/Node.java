/*
 * dummy
 * dummy
 *
 * The version of the OpenAPI document: dummy
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * dummy
 */
@Schema(name = "Node", description = "dummy")
@JsonPropertyOrder({
  Node.JSON_PROPERTY_LEFT,
  Node.JSON_PROPERTY_RIGHT
})
@JsonTypeName("Node")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen")
@Introspected
public class Node {
    public static final String JSON_PROPERTY_LEFT = "left";
    private Node left;

    public static final String JSON_PROPERTY_RIGHT = "right";
    private Node right;

    public Node() {
    }

    public Node left(Node left) {
        this.left = left;
        return this;
    }

    /**
     * Get left
     * @return left
     **/
    @Valid
    @Nullable
    @Schema(name = "left", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_LEFT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Node getLeft() {
        return left;
    }

    @JsonProperty(JSON_PROPERTY_LEFT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLeft(Node left) {
        this.left = left;
    }

    public Node right(Node right) {
        this.right = right;
        return this;
    }

    /**
     * Get right
     * @return right
     **/
    @Valid
    @Nullable
    @Schema(name = "right", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_RIGHT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Node getRight() {
        return right;
    }

    @JsonProperty(JSON_PROPERTY_RIGHT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRight(Node right) {
        this.right = right;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Node node = (Node) o;
        return Objects.equals(this.left, node.left) &&
            Objects.equals(this.right, node.right);
    }

    @Override
    public int hashCode() {
        return Objects.hash(left, right);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Node {\n");
        sb.append("    left: ").append(toIndentedString(left)).append("\n");
        sb.append("    right: ").append(toIndentedString(right)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

