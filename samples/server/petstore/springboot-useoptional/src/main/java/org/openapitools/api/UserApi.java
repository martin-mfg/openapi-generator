/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.6.0-SNAPSHOT).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.CreateUsersWithArrayInput201Response;
import org.openapitools.model.Param0Def;
import org.openapitools.model.Param1Def;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Api(value = "user", description = "the user API")
public interface UserApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /user/createWithArray : Creates list of users with given input array
     * 
     *
     * @param param1  (optional)
     * @param param2  (optional)
     * @return bar baz (status code 200)
     *         or foo bar (status code 201)
     */
    @ApiOperation(
        tags = { "user" },
        value = "Creates list of users with given input array",
        nickname = "createUsersWithArrayInput",
        notes = "",
        response = Param1Def.class,
        responseContainer = "List"
    )
    @ApiResponses({
        @ApiResponse(code = 200, message = "bar baz", response = Param1Def.class, responseContainer = "List"),
        @ApiResponse(code = 201, message = "foo bar", response = CreateUsersWithArrayInput201Response.class)
    })
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/user/createWithArray",
        produces = { "application/json" }
    )
    default ResponseEntity<List<Param1Def>> createUsersWithArrayInput(
        @ApiParam(value = "") @RequestHeader(value = "param1", required = false) Optional<Param0Def> param1,
        @ApiParam(value = "") @RequestHeader(value = "param2", required = false) Optional<List<@Valid Param1Def>> param2
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"myField\" : [ 0, 0 ] }, { \"myField\" : [ 0, 0 ] } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
