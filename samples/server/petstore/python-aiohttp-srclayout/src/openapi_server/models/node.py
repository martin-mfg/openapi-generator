# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Node(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, left: Node=None, right: Node=None):
        """Node - a model defined in OpenAPI

        :param left: The left of this Node.
        :param right: The right of this Node.
        """
        self.openapi_types = {
            'left': Node,
            'right': Node
        }

        self.attribute_map = {
            'left': 'left',
            'right': 'right'
        }

        self._left = left
        self._right = right

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Node':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Node of this Node.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def left(self):
        """Gets the left of this Node.


        :return: The left of this Node.
        :rtype: Node
        """
        return self._left

    @left.setter
    def left(self, left):
        """Sets the left of this Node.


        :param left: The left of this Node.
        :type left: Node
        """

        self._left = left

    @property
    def right(self):
        """Gets the right of this Node.


        :return: The right of this Node.
        :rtype: Node
        """
        return self._right

    @right.setter
    def right(self, right):
        """Sets the right of this Node.


        :param right: The right of this Node.
        :type right: Node
        """

        self._right = right
