/*
 * OpenAPI Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Baz
 */
@JsonPropertyOrder({
  Baz.JSON_PROPERTY_INNER_BAZ
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen")
public class Baz   {
  public static final String JSON_PROPERTY_INNER_BAZ = "innerBaz";
  @JsonProperty(JSON_PROPERTY_INNER_BAZ)
  private String innerBaz = "defaultBaz";

  public Baz innerBaz(String innerBaz) {
    this.innerBaz = innerBaz;
    return this;
  }

  /**
   * Get innerBaz
   * @return innerBaz
   **/
  @JsonProperty(value = "innerBaz")
  @ApiModelProperty(value = "")
  
  public String getInnerBaz() {
    return innerBaz;
  }

  public void setInnerBaz(String innerBaz) {
    this.innerBaz = innerBaz;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Baz baz = (Baz) o;
    return Objects.equals(this.innerBaz, baz.innerBaz);
  }

  @Override
  public int hashCode() {
    return Objects.hash(innerBaz);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Baz {\n");
    
    sb.append("    innerBaz: ").append(toIndentedString(innerBaz)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

