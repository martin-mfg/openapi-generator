/**
 * dummy
 * dummy
 *
 * The version of the OpenAPI document: dummy
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.0.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Dummy_200_response_outerProp.h
 *
 * 
 */

#ifndef Dummy_200_response_outerProp_H_
#define Dummy_200_response_outerProp_H_



#include "Dummy_200_response_outerProp_innerProp.h"
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  Dummy_200_response_outerProp 
{
public:
    Dummy_200_response_outerProp() = default;
    explicit Dummy_200_response_outerProp(boost::property_tree::ptree const& pt);
    virtual ~Dummy_200_response_outerProp() = default;

    Dummy_200_response_outerProp(const Dummy_200_response_outerProp& other) = default; // copy constructor
    Dummy_200_response_outerProp(Dummy_200_response_outerProp&& other) noexcept = default; // move constructor

    Dummy_200_response_outerProp& operator=(const Dummy_200_response_outerProp& other) = default; // copy assignment
    Dummy_200_response_outerProp& operator=(Dummy_200_response_outerProp&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// Dummy_200_response_outerProp members

    /// <summary>
    /// 
    /// </summary>
    Dummy_200_response_outerProp_innerProp getInnerProp() const;
    void setInnerProp(Dummy_200_response_outerProp_innerProp value);

protected:
    Dummy_200_response_outerProp_innerProp m_InnerProp;
};

std::vector<Dummy_200_response_outerProp> createDummy_200_response_outerPropVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<Dummy_200_response_outerProp>(const Dummy_200_response_outerProp& val) {
    return val.toPropertyTree();
}

template<>
inline Dummy_200_response_outerProp fromPt<Dummy_200_response_outerProp>(const boost::property_tree::ptree& pt) {
    Dummy_200_response_outerProp ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* Dummy_200_response_outerProp_H_ */
