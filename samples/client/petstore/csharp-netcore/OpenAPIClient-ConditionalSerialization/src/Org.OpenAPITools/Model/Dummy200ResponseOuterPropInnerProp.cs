/*
 * dummy
 *
 * dummy
 *
 * The version of the OpenAPI document: dummy
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;
using OpenAPIClientUtils = Org.OpenAPITools.Client.ClientUtils;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Dummy200ResponseOuterPropInnerProp
    /// </summary>
    [DataContract(Name = "dummy_200_response_outerProp_innerProp")]
    public partial class Dummy200ResponseOuterPropInnerProp : IEquatable<Dummy200ResponseOuterPropInnerProp>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Dummy200ResponseOuterPropInnerProp" /> class.
        /// </summary>
        /// <param name="myBool">myBool.</param>
        public Dummy200ResponseOuterPropInnerProp(bool myBool = default(bool))
        {
            this._MyBool = myBool;
            if (this.MyBool != null)
            {
                this._flagMyBool = true;
            }
            this.AdditionalProperties = new Dictionary<string, object>();
        }

        /// <summary>
        /// Gets or Sets MyBool
        /// </summary>
        [DataMember(Name = "myBool", EmitDefaultValue = true)]
        public bool MyBool
        {
            get{ return _MyBool;}
            set
            {
                _MyBool = value;
                _flagMyBool = true;
            }
        }
        private bool _MyBool;
        private bool _flagMyBool;

        /// <summary>
        /// Returns false as MyBool should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeMyBool()
        {
            return _flagMyBool;
        }
        /// <summary>
        /// Gets or Sets additional properties
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Dummy200ResponseOuterPropInnerProp {\n");
            sb.Append("  MyBool: ").Append(MyBool).Append("\n");
            sb.Append("  AdditionalProperties: ").Append(AdditionalProperties).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return OpenAPIClientUtils.compareLogic.Compare(this, input as Dummy200ResponseOuterPropInnerProp).AreEqual;
        }

        /// <summary>
        /// Returns true if Dummy200ResponseOuterPropInnerProp instances are equal
        /// </summary>
        /// <param name="input">Instance of Dummy200ResponseOuterPropInnerProp to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Dummy200ResponseOuterPropInnerProp input)
        {
            return OpenAPIClientUtils.compareLogic.Compare(this, input).AreEqual;
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.MyBool.GetHashCode();
                if (this.AdditionalProperties != null)
                {
                    hashCode = (hashCode * 59) + this.AdditionalProperties.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
