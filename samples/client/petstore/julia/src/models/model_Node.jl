# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Node
dummy

    Node(;
        left=nothing,
        right=nothing,
    )

    - left::Node
    - right::Node
"""
Base.@kwdef mutable struct Node <: OpenAPI.APIModel
    left = nothing # spec type: Union{ Nothing, Node }
    right = nothing # spec type: Union{ Nothing, Node }

    function Node(left, right, )
        OpenAPI.validate_property(Node, Symbol("left"), left)
        OpenAPI.validate_property(Node, Symbol("right"), right)
        return new(left, right, )
    end
end # type Node

const _property_types_Node = Dict{Symbol,String}(Symbol("left")=>"Node", Symbol("right")=>"Node", )
OpenAPI.property_type(::Type{ Node }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Node[name]))}

function check_required(o::Node)
    true
end

function OpenAPI.validate_property(::Type{ Node }, name::Symbol, val)
end
