/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "PFXExampleResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "PFXHelpers.h"

namespace test_namespace {

PFXExampleResponse::PFXExampleResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

PFXExampleResponse::PFXExampleResponse() {
    this->initializeModel();
}

PFXExampleResponse::~PFXExampleResponse() {}

void PFXExampleResponse::initializeModel() {

    m_my_only_property_isSet = false;
    m_my_only_property_isValid = false;
}

void PFXExampleResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void PFXExampleResponse::fromJsonObject(QJsonObject json) {

    m_my_only_property_isValid = ::test_namespace::fromJsonValue(my_only_property, json[QString("myOnlyProperty")]);
    m_my_only_property_isSet = !json[QString("myOnlyProperty")].isNull() && m_my_only_property_isValid;
}

QString PFXExampleResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject PFXExampleResponse::asJsonObject() const {
    QJsonObject obj;
    if (my_only_property.size() > 0) {
        obj.insert(QString("myOnlyProperty"), ::test_namespace::toJsonValue(my_only_property));
    }
    return obj;
}

QList<bool> PFXExampleResponse::getMyOnlyProperty() const {
    return my_only_property;
}
void PFXExampleResponse::setMyOnlyProperty(const QList<bool> &my_only_property) {
    this->my_only_property = my_only_property;
    this->m_my_only_property_isSet = true;
}

bool PFXExampleResponse::is_my_only_property_Set() const{
    return m_my_only_property_isSet;
}

bool PFXExampleResponse::is_my_only_property_Valid() const{
    return m_my_only_property_isValid;
}

bool PFXExampleResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (my_only_property.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool PFXExampleResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace test_namespace
