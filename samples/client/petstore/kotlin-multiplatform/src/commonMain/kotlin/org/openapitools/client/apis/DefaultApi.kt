/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis


import org.openapitools.client.infrastructure.*
import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import kotlinx.serialization.json.Json
import io.ktor.http.ParametersBuilder
import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

open class DefaultApi(
    baseUrl: String = ApiClient.BASE_URL,
    httpClientEngine: HttpClientEngine? = null,
    httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
    jsonSerializer: Json = ApiClient.JSON_DEFAULT
) : ApiClient(baseUrl, httpClientEngine, httpClientConfig, jsonSerializer) {

    /**
     * 
     * get some object
     * @return kotlin.collections.List<kotlin.Double>
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun retrieveSomething(): HttpResponse<kotlin.collections.List<kotlin.Double>> {

        val localVariableAuthNames = listOf<String>()

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/example/someMethod",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap<RetrieveSomethingResponse>().map { value }
    }

    @Serializable
    private class RetrieveSomethingResponse(val value: List<kotlin.Double>) {
        @Serializer(RetrieveSomethingResponse::class)
        companion object : KSerializer<RetrieveSomethingResponse> {
            private val serializer: KSerializer<List<kotlin.Double>> = serializer<List<kotlin.Double>>()
            override val descriptor = serializer.descriptor
            override fun serialize(encoder: Encoder, obj: RetrieveSomethingResponse) = serializer.serialize(encoder, obj.value)
            override fun deserialize(decoder: Decoder) = RetrieveSomethingResponse(serializer.deserialize(decoder))
        }
    }

}
