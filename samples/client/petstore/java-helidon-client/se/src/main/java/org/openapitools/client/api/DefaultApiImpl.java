/**
 * dummy
 * dummy
 *
 * The version of the OpenAPI document: dummy
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.api;

import java.util.Objects;
import org.openapitools.client.ApiResponse;

import com.fasterxml.jackson.databind.ObjectMapper;

import io.helidon.common.GenericType;
import io.helidon.common.http.MediaType;
import io.helidon.common.reactive.Single;
import io.helidon.config.Config;
import io.helidon.media.common.MediaSupport;

import io.helidon.media.jackson.JacksonSupport;
import io.helidon.webclient.WebClientRequestBuilder;
import io.helidon.webclient.WebClientResponse;

import org.openapitools.client.ApiClient;

import org.openapitools.client.model.ExampleResponse;
import org.openapitools.client.model.Node;

/**
 * dummy
 *
 * <p>dummy
 */
public class DefaultApiImpl implements DefaultApi {

  private final ApiClient apiClient;

  protected static final GenericType<ExampleResponse> RESPONSE_TYPE_dummy = ResponseType.create(ExampleResponse.class);

  /**
   * Creates a new instance of DefaultApiImpl initialized with the specified {@link ApiClient}.
   *
   */
  public static DefaultApiImpl create(ApiClient apiClient) {
    return new DefaultApiImpl(apiClient);
  }

  protected DefaultApiImpl(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  @Override
  public ApiResponse<ExampleResponse> dummy() {
    WebClientRequestBuilder webClientRequestBuilder = dummyRequestBuilder();
    return dummySubmit(webClientRequestBuilder);
  }

  /**
   * Creates a {@code WebClientRequestBuilder} for the dummy operation.
   * Optional customization point for subclasses.
   *
   * @return WebClientRequestBuilder for dummy
   */
  protected WebClientRequestBuilder dummyRequestBuilder() {
    WebClientRequestBuilder webClientRequestBuilder = apiClient.webClient()
            .method("GET");

    webClientRequestBuilder.path("/example/someMethod");
    webClientRequestBuilder.accept(MediaType.APPLICATION_JSON);

    return webClientRequestBuilder;
  }

  /**
   * Initiates the request for the dummy operation.
   * Optional customization point for subclasses.
   *
   * @param webClientRequestBuilder the request builder to use for submitting the request
   * @return {@code ApiResponse<ExampleResponse>} for the submitted request
   */
  protected ApiResponse<ExampleResponse> dummySubmit(WebClientRequestBuilder webClientRequestBuilder) {
    Single<WebClientResponse> webClientResponse = webClientRequestBuilder.submit();
    return ApiResponse.create(RESPONSE_TYPE_dummy, webClientResponse);
  }

}
