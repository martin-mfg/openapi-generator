

#import "SWGNodeManagedObjectBuilder.h"

/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

@implementation SWGNodeManagedObjectBuilder

-(instancetype)init {
    self = [super init];
    if (self != nil) {
       _leftBuilder = [[SWGNodeManagedObjectBuilder alloc] init];
       _rightBuilder = [[SWGNodeManagedObjectBuilder alloc] init];
    }
    return self;
}

-(SWGNodeManagedObject*)createNewSWGNodeManagedObjectInContext:(NSManagedObjectContext*)context {
    SWGNodeManagedObject *managedObject = [NSEntityDescription insertNewObjectForEntityForName:NSStringFromClass([SWGNodeManagedObject class]) inManagedObjectContext:context];
    return managedObject;
}

-(SWGNodeManagedObject*)SWGNodeManagedObjectFromSWGNode:(SWGNode*)object context:(NSManagedObjectContext*)context {
    SWGNodeManagedObject* newSWGNode = [self createNewSWGNodeManagedObjectInContext:context];
    [self updateSWGNodeManagedObject:newSWGNode withSWGNode:object];
    return newSWGNode;
}

-(void)updateSWGNodeManagedObject:(SWGNodeManagedObject*)managedObject withSWGNode:(SWGNode*)object {
    if(!managedObject || !object) {
        return;
    }
    NSManagedObjectContext* context = managedObject.managedObjectContext;

    if(!managedObject.left) {
        managedObject.left = [self.leftBuilder SWGNodeManagedObjectFromSWGNode:object.left context:managedObject.managedObjectContext];
    } else {
        [self.leftBuilder updateSWGNodeManagedObject:managedObject.left withSWGNode:object.left];
    }

    if(!managedObject.right) {
        managedObject.right = [self.rightBuilder SWGNodeManagedObjectFromSWGNode:object.right context:managedObject.managedObjectContext];
    } else {
        [self.rightBuilder updateSWGNodeManagedObject:managedObject.right withSWGNode:object.right];
    }

}

-(SWGNode*)SWGNodeFromSWGNodeManagedObject:(SWGNodeManagedObject*)obj {
    if(!obj) {
        return nil;
    }
    SWGNode* newSWGNode = [[SWGNode alloc] init];
    [self updateSWGNode:newSWGNode withSWGNodeManagedObject:obj];
    return newSWGNode;
}

-(void)updateSWGNode:(SWGNode*)newSWGNode withSWGNodeManagedObject:(SWGNodeManagedObject*)obj {
    newSWGNode.left = [self.leftBuilder SWGNodeFromSWGNodeManagedObject:obj.left];
    newSWGNode.right = [self.rightBuilder SWGNodeFromSWGNodeManagedObject:obj.right];
}

@end
