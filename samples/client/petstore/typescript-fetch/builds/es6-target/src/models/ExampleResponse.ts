/* tslint:disable */
/* eslint-disable */
/**
 * dummy
 * dummy
 *
 * The version of the OpenAPI document: dummy
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * dummy
 * @export
 * @interface ExampleResponse
 */
export interface ExampleResponse {
    /**
     * 
     * @type {string}
     * @memberof ExampleResponse
     */
    emptyString?: string;
    /**
     * 
     * @type {string}
     * @memberof ExampleResponse
     */
    numberString?: string;
    /**
     * 
     * @type {string}
     * @memberof ExampleResponse
     */
    boolString?: string;
    /**
     * 
     * @type {string}
     * @memberof ExampleResponse
     */
    nullString?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ExampleResponse
     */
    aBool?: boolean;
    /**
     * 
     * @type {number}
     * @memberof ExampleResponse
     */
    zero?: number;
}

/**
 * Check if a given object implements the ExampleResponse interface.
 */
export function instanceOfExampleResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ExampleResponseFromJSON(json: any): ExampleResponse {
    return ExampleResponseFromJSONTyped(json, false);
}

export function ExampleResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExampleResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'emptyString': !exists(json, 'emptyString') ? undefined : json['emptyString'],
        'numberString': !exists(json, 'numberString') ? undefined : json['numberString'],
        'boolString': !exists(json, 'boolString') ? undefined : json['boolString'],
        'nullString': !exists(json, 'nullString') ? undefined : json['nullString'],
        'aBool': !exists(json, 'aBool') ? undefined : json['aBool'],
        'zero': !exists(json, 'zero') ? undefined : json['zero'],
    };
}

export function ExampleResponseToJSON(value?: ExampleResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'emptyString': value.emptyString,
        'numberString': value.numberString,
        'boolString': value.boolString,
        'nullString': value.nullString,
        'aBool': value.aBool,
        'zero': value.zero,
    };
}

