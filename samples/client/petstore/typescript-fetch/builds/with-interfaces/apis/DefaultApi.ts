/* tslint:disable */
/* eslint-disable */
/**
 * Some example
 * dummy description
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ExampleResponse,
} from '../models/index';
import {
    ExampleResponseFromJSON,
    ExampleResponseToJSON,
} from '../models/index';

/**
 * DefaultApi - interface
 * 
 * @export
 * @interface DefaultApiInterface
 */
export interface DefaultApiInterface {
    /**
     * get some object
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApiInterface
     */
    retrieveSomethingRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ExampleResponse>>;

    /**
     * get some object
     */
    retrieveSomething(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ExampleResponse>;

}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI implements DefaultApiInterface {

    /**
     * get some object
     */
    async retrieveSomethingRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ExampleResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/example/someMethod`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ExampleResponseFromJSON(jsonValue));
    }

    /**
     * get some object
     */
    async retrieveSomething(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ExampleResponse> {
        const response = await this.retrieveSomethingRaw(initOverrides);
        return await response.value();
    }

}
