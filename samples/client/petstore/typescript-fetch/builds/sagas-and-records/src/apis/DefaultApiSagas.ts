/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import {Api} from './index';
import {List} from 'immutable';
import {all, fork, put, takeLatest} from "redux-saga/effects";
import {apiCall, createSagaAction as originalCreateSagaAction, BaseEntitySupportPayloadApiAction, BasePayloadApiAction, NormalizedRecordEntities, normalizedEntities} from "../runtimeSagasAndRecords";
import {Action} from "redux-ts-simple";

import {
    ExampleResponse,
    ExampleResponseRecord,
    exampleResponseRecordUtils,
} from '../models/index';

const createSagaAction = <T>(type: string) => originalCreateSagaAction<T>(type, {namespace: "api_defaultApi"});

export const defaultApiSagaMap = new Map<string, () => Generator<any, any, any>>([
        ["exampleSomeMethodGet", exampleSomeMethodGetSaga],
    ]
);

export function *defaultApiAllSagas() {
    yield all([...defaultApiSagaMap.values()].map(actionSaga => fork(actionSaga)));
}

//region exampleSomeMethodGet

export interface PayloadExampleSomeMethodGet extends BasePayloadApiAction {
}


export const exampleSomeMethodGetRequest = createSagaAction<void>("exampleSomeMethodGetRequest");
export const exampleSomeMethodGetSuccess = createSagaAction<void>("exampleSomeMethodGetSuccess");
export const exampleSomeMethodGetFailure = createSagaAction<{error: any, requestPayload: PayloadExampleSomeMethodGet}>("exampleSomeMethodGetFailure");

export const exampleSomeMethodGet = createSagaAction<PayloadExampleSomeMethodGet>("exampleSomeMethodGet");

export function *exampleSomeMethodGetSaga() {
    yield takeLatest(exampleSomeMethodGet, exampleSomeMethodGetSagaImp);
}

export function *exampleSomeMethodGetSagaImp(_action_: Action<PayloadExampleSomeMethodGet>) {
    const {markErrorsAsHandled, ..._payloadRest_} = _action_.payload;
    try {

        yield put(exampleSomeMethodGetRequest());

        const response: Required<ExampleResponse> = yield apiCall(Api.defaultApi, Api.defaultApi.exampleSomeMethodGet,
        );

            yield put(exampleSomeMethodGetSuccess());

        return undefined;
    } catch (error) {
        if (markErrorsAsHandled) {error.wasHandled = true; }
        yield put(exampleSomeMethodGetFailure({error, requestPayload: _action_.payload}));
        return error;
    }
}
//endregion
