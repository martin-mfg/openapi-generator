#
# dummy
# dummy
# Version: dummy
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

dummy

.PARAMETER Left
No description available.
.PARAMETER Right
No description available.
.OUTPUTS

Node<PSCustomObject>
#>

function Initialize-PSNode {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Left},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Right}
    )

    Process {
        'Creating PSCustomObject: PSPetstore => PSNode' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "left" = ${Left}
            "right" = ${Right}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to Node<PSCustomObject>

.DESCRIPTION

Convert from JSON to Node<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

Node<PSCustomObject>
#>
function ConvertFrom-PSJsonToNode {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSPetstore => PSNode' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PSNode
        $AllProperties = ("left", "right")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "left"))) { #optional property not found
            $Left = $null
        } else {
            $Left = $JsonParameters.PSobject.Properties["left"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "right"))) { #optional property not found
            $Right = $null
        } else {
            $Right = $JsonParameters.PSobject.Properties["right"].value
        }

        $PSO = [PSCustomObject]@{
            "left" = ${Left}
            "right" = ${Right}
        }

        return $PSO
    }

}

