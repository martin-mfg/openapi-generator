/*
 * OpenAPI Petstore
 * dummy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
// ArrayType is added below
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.xyz.ArrayType;
import java.xyz.Param1DefType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Param0Def
 */
@JsonPropertyOrder({
  Param0Def.JSON_PROPERTY_PARAM0_FIELD
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Param0Def {
  public static final String JSON_PROPERTY_PARAM0_FIELD = "param0Field";
  private ArrayType<Param1DefType> param0Field;

  public Param0Def() { 
  }

  public Param0Def param0Field(ArrayType<Param1DefType> param0Field) {
    this.param0Field = param0Field;
    return this;
  }

  public Param0Def addParam0FieldItem(Param1DefType param0FieldItem) {
    if (this.param0Field == null) {
      this.param0Field = new ArrayList<>();
    }
    this.param0Field.add(param0FieldItem);
    return this;
  }

   /**
   * Get param0Field
   * @return param0Field
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARAM0_FIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ArrayType<Param1DefType> getParam0Field() {
    return param0Field;
  }


  @JsonProperty(JSON_PROPERTY_PARAM0_FIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParam0Field(ArrayType<Param1DefType> param0Field) {
    this.param0Field = param0Field;
  }


  /**
   * Return true if this Param0Def object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Param0Def param0Def = (Param0Def) o;
    return Objects.equals(this.param0Field, param0Def.param0Field);
  }

  @Override
  public int hashCode() {
    return Objects.hash(param0Field);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Param0Def {\n");
    sb.append("    param0Field: ").append(toIndentedString(param0Field)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `param0Field` to the URL query string
    if (getParam0Field() != null) {
      for (int i = 0; i < getParam0Field().size(); i++) {
        if (getParam0Field().get(i) != null) {
          joiner.add(getParam0Field().get(i).toUrlQueryString(String.format("%sparam0Field%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}

