/*
 * dummy
 * dummy
 *
 * The version of the OpenAPI document: dummy
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import android.os.Parcelable;
import android.os.Parcel;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * dummy
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ExampleResponse implements Parcelable {
  public static final String SERIALIZED_NAME_EMPTY_STRING = "emptyString";
  @SerializedName(SERIALIZED_NAME_EMPTY_STRING)
  private String emptyString = "";

  public static final String SERIALIZED_NAME_NUMBER_STRING = "numberString";
  @SerializedName(SERIALIZED_NAME_NUMBER_STRING)
  private String numberString = "42";

  public static final String SERIALIZED_NAME_BOOL_STRING = "boolString";
  @SerializedName(SERIALIZED_NAME_BOOL_STRING)
  private String boolString = "false";

  public static final String SERIALIZED_NAME_NULL_STRING = "nullString";
  @SerializedName(SERIALIZED_NAME_NULL_STRING)
  private String nullString = "null";

  public static final String SERIALIZED_NAME_A_BOOL = "aBool";
  @SerializedName(SERIALIZED_NAME_A_BOOL)
  private Boolean aBool = false;

  public static final String SERIALIZED_NAME_ZERO = "zero";
  @SerializedName(SERIALIZED_NAME_ZERO)
  private Integer zero = 0;

  public ExampleResponse() {
  }

  public ExampleResponse emptyString(String emptyString) {
    
    this.emptyString = emptyString;
    return this;
  }

   /**
   * Get emptyString
   * @return emptyString
  **/
  @javax.annotation.Nullable
  public String getEmptyString() {
    return emptyString;
  }


  public void setEmptyString(String emptyString) {
    this.emptyString = emptyString;
  }


  public ExampleResponse numberString(String numberString) {
    
    this.numberString = numberString;
    return this;
  }

   /**
   * Get numberString
   * @return numberString
  **/
  @javax.annotation.Nullable
  public String getNumberString() {
    return numberString;
  }


  public void setNumberString(String numberString) {
    this.numberString = numberString;
  }


  public ExampleResponse boolString(String boolString) {
    
    this.boolString = boolString;
    return this;
  }

   /**
   * Get boolString
   * @return boolString
  **/
  @javax.annotation.Nullable
  public String getBoolString() {
    return boolString;
  }


  public void setBoolString(String boolString) {
    this.boolString = boolString;
  }


  public ExampleResponse nullString(String nullString) {
    
    this.nullString = nullString;
    return this;
  }

   /**
   * Get nullString
   * @return nullString
  **/
  @javax.annotation.Nullable
  public String getNullString() {
    return nullString;
  }


  public void setNullString(String nullString) {
    this.nullString = nullString;
  }


  public ExampleResponse aBool(Boolean aBool) {
    
    this.aBool = aBool;
    return this;
  }

   /**
   * Get aBool
   * @return aBool
  **/
  @javax.annotation.Nullable
  public Boolean getaBool() {
    return aBool;
  }


  public void setaBool(Boolean aBool) {
    this.aBool = aBool;
  }


  public ExampleResponse zero(Integer zero) {
    
    this.zero = zero;
    return this;
  }

   /**
   * Get zero
   * @return zero
  **/
  @javax.annotation.Nullable
  public Integer getZero() {
    return zero;
  }


  public void setZero(Integer zero) {
    this.zero = zero;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExampleResponse exampleResponse = (ExampleResponse) o;
    return Objects.equals(this.emptyString, exampleResponse.emptyString) &&
        Objects.equals(this.numberString, exampleResponse.numberString) &&
        Objects.equals(this.boolString, exampleResponse.boolString) &&
        Objects.equals(this.nullString, exampleResponse.nullString) &&
        Objects.equals(this.aBool, exampleResponse.aBool) &&
        Objects.equals(this.zero, exampleResponse.zero);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emptyString, numberString, boolString, nullString, aBool, zero);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExampleResponse {\n");
    sb.append("    emptyString: ").append(toIndentedString(emptyString)).append("\n");
    sb.append("    numberString: ").append(toIndentedString(numberString)).append("\n");
    sb.append("    boolString: ").append(toIndentedString(boolString)).append("\n");
    sb.append("    nullString: ").append(toIndentedString(nullString)).append("\n");
    sb.append("    aBool: ").append(toIndentedString(aBool)).append("\n");
    sb.append("    zero: ").append(toIndentedString(zero)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public void writeToParcel(Parcel out, int flags) {
    out.writeValue(emptyString);
    out.writeValue(numberString);
    out.writeValue(boolString);
    out.writeValue(nullString);
    out.writeValue(aBool);
    out.writeValue(zero);
  }

  ExampleResponse(Parcel in) {
    emptyString = (String)in.readValue(null);
    numberString = (String)in.readValue(null);
    boolString = (String)in.readValue(null);
    nullString = (String)in.readValue(null);
    aBool = (Boolean)in.readValue(null);
    zero = (Integer)in.readValue(null);
  }

  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<ExampleResponse> CREATOR = new Parcelable.Creator<ExampleResponse>() {
    public ExampleResponse createFromParcel(Parcel in) {
      return new ExampleResponse(in);
    }
    public ExampleResponse[] newArray(int size) {
      return new ExampleResponse[size];
    }
  };

  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("emptyString");
    openapiFields.add("numberString");
    openapiFields.add("boolString");
    openapiFields.add("nullString");
    openapiFields.add("aBool");
    openapiFields.add("zero");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ExampleResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ExampleResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ExampleResponse is not found in the empty JSON string", ExampleResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ExampleResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ExampleResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("emptyString") != null && !jsonObj.get("emptyString").isJsonNull()) && !jsonObj.get("emptyString").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emptyString` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emptyString").toString()));
      }
      if ((jsonObj.get("numberString") != null && !jsonObj.get("numberString").isJsonNull()) && !jsonObj.get("numberString").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numberString` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numberString").toString()));
      }
      if ((jsonObj.get("boolString") != null && !jsonObj.get("boolString").isJsonNull()) && !jsonObj.get("boolString").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `boolString` to be a primitive type in the JSON string but got `%s`", jsonObj.get("boolString").toString()));
      }
      if ((jsonObj.get("nullString") != null && !jsonObj.get("nullString").isJsonNull()) && !jsonObj.get("nullString").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nullString` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nullString").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ExampleResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ExampleResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ExampleResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ExampleResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ExampleResponse>() {
           @Override
           public void write(JsonWriter out, ExampleResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ExampleResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ExampleResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ExampleResponse
  * @throws IOException if the JSON string is invalid with respect to ExampleResponse
  */
  public static ExampleResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ExampleResponse.class);
  }

 /**
  * Convert an instance of ExampleResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

