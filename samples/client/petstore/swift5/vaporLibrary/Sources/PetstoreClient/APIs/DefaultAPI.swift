//
// DefaultAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import Vapor
#if canImport(AnyCodable)
import AnyCodable
#endif

open class DefaultAPI {

    /**
     GET /example/someMethod
     dummy
     - returns: `EventLoopFuture` of `ClientResponse` 
     */
    open class func dummyRaw(headers: HTTPHeaders = PetstoreClientAPI.customHeaders, beforeSend: (inout ClientRequest) throws -> () = { _ in }) -> EventLoopFuture<ClientResponse> {
        let localVariablePath = "/example/someMethod"
        let localVariableURLString = PetstoreClientAPI.basePath + localVariablePath

        guard let localVariableApiClient = Configuration.apiClient else {
            fatalError("Configuration.apiClient is not set.")
        }

        return localVariableApiClient.send(.GET, headers: headers, to: URI(string: localVariableURLString)) { localVariableRequest in
            try Configuration.apiWrapper(&localVariableRequest)
            
            
            
            try beforeSend(&localVariableRequest)
        }
    }

    public enum Dummy {
        case http200(value: Dummy200Response, raw: ClientResponse)
        case http0(raw: ClientResponse)
    }

    /**
     GET /example/someMethod
     dummy
     - returns: `EventLoopFuture` of `Dummy` 
     */
    open class func dummy(headers: HTTPHeaders = PetstoreClientAPI.customHeaders, beforeSend: (inout ClientRequest) throws -> () = { _ in }) -> EventLoopFuture<Dummy> {
        return dummyRaw(headers: headers, beforeSend: beforeSend).flatMapThrowing { response -> Dummy in
            switch response.status.code {
            case 200:
                return .http200(value: try response.content.decode(Dummy200Response.self, using: Configuration.contentConfiguration.requireDecoder(for: Dummy200Response.defaultContentType)), raw: response)
            default:
                return .http0(raw: response)
            }
        }
    }
}
