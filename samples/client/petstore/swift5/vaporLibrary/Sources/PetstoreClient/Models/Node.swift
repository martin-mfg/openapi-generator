//
// Node.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif
import Vapor

/** dummy */
public final class Node: Content, Hashable {

    public var `left`: Node?
    public var `right`: Node?

    public init(`left`: Node? = nil, `right`: Node? = nil) {
        self.`left` = `left`
        self.`right` = `right`
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case `left` = "left"
        case `right` = "right"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(`left`, forKey: .`left`)
        try container.encodeIfPresent(`right`, forKey: .`right`)
    }

    public static func == (lhs: Node, rhs: Node) -> Bool {
        lhs.`left` == rhs.`left` &&
        lhs.`right` == rhs.`right`
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(`left`?.hashValue)
        hasher.combine(`right`?.hashValue)
        
    }
}

