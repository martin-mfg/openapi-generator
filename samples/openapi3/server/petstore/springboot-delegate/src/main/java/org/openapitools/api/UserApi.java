/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.6.0-SNAPSHOT).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.CreateUsersWithArrayInput201Response;
import org.openapitools.model.Param0Def;
import org.openapitools.model.Param1Def;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Tag(name = "user", description = "the user API")
public interface UserApi {

    default UserApiDelegate getDelegate() {
        return new UserApiDelegate() {};
    }

    /**
     * POST /user/createWithArray : Creates list of users with given input array
     * 
     *
     * @param param0  (optional)
     * @param param1  (optional)
     * @return bar baz (status code 200)
     *         or foo bar (status code 201)
     */
    @Operation(
        operationId = "createUsersWithArrayInput",
        summary = "Creates list of users with given input array",
        description = "",
        tags = { "user" },
        responses = {
            @ApiResponse(responseCode = "200", description = "bar baz", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Param1Def.class)))
            }),
            @ApiResponse(responseCode = "201", description = "foo bar", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CreateUsersWithArrayInput201Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/user/createWithArray",
        produces = { "application/json" }
    )
    default ResponseEntity<List<Param1Def>> createUsersWithArrayInput(
        @Parameter(name = "param0", description = "", in = ParameterIn.HEADER) @RequestHeader(value = "param0", required = false) Param0Def param0,
        @Parameter(name = "param1", description = "", in = ParameterIn.HEADER) @RequestHeader(value = "param1", required = false) List<@Valid Param1Def> param1
    ) {
        return getDelegate().createUsersWithArrayInput(param0, param1);
    }

}
