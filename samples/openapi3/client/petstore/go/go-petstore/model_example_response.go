/*
Some example

dummy description

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package petstore

import (
	"encoding/json"
)

// checks if the ExampleResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExampleResponse{}

// ExampleResponse struct for ExampleResponse
type ExampleResponse struct {
	MyOnlyProperty []bool `json:"myOnlyProperty,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExampleResponse ExampleResponse

// NewExampleResponse instantiates a new ExampleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExampleResponse() *ExampleResponse {
	this := ExampleResponse{}
	return &this
}

// NewExampleResponseWithDefaults instantiates a new ExampleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExampleResponseWithDefaults() *ExampleResponse {
	this := ExampleResponse{}
	return &this
}

// GetMyOnlyProperty returns the MyOnlyProperty field value if set, zero value otherwise.
func (o *ExampleResponse) GetMyOnlyProperty() []bool {
	if o == nil || IsNil(o.MyOnlyProperty) {
		var ret []bool
		return ret
	}
	return o.MyOnlyProperty
}

// GetMyOnlyPropertyOk returns a tuple with the MyOnlyProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleResponse) GetMyOnlyPropertyOk() ([]bool, bool) {
	if o == nil || IsNil(o.MyOnlyProperty) {
		return nil, false
	}
	return o.MyOnlyProperty, true
}

// HasMyOnlyProperty returns a boolean if a field has been set.
func (o *ExampleResponse) HasMyOnlyProperty() bool {
	if o != nil && !IsNil(o.MyOnlyProperty) {
		return true
	}

	return false
}

// SetMyOnlyProperty gets a reference to the given []bool and assigns it to the MyOnlyProperty field.
func (o *ExampleResponse) SetMyOnlyProperty(v []bool) {
	o.MyOnlyProperty = v
}

func (o ExampleResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExampleResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MyOnlyProperty) {
		toSerialize["myOnlyProperty"] = o.MyOnlyProperty
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExampleResponse) UnmarshalJSON(bytes []byte) (err error) {
	varExampleResponse := _ExampleResponse{}

	if err = json.Unmarshal(bytes, &varExampleResponse); err == nil {
		*o = ExampleResponse(varExampleResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "myOnlyProperty")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExampleResponse struct {
	value *ExampleResponse
	isSet bool
}

func (v NullableExampleResponse) Get() *ExampleResponse {
	return v.value
}

func (v *NullableExampleResponse) Set(val *ExampleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableExampleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableExampleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExampleResponse(val *ExampleResponse) *NullableExampleResponse {
	return &NullableExampleResponse{value: val, isSet: true}
}

func (v NullableExampleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExampleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


